<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jsh.mybatis.dao.EmpDao">

    <!--
       resultMap：设置自定义映射关系
       id：唯一标识，不能重复
       type：设置映射关系中的实体类类型
       子标签：
       id：设置主键的映射关系
       result：设置普通字段的映射关系
       属性：
       property：设置映射关系中的属性名，必须是type属性所设置的实体类类型中的属性名
       column：设置映射关系中的字段名，必须是sql语句查询出的字段名
   -->

    <!--处理多对一映射关系方式一：级联属性赋值-->
    <resultMap id="empAndDeptResultMapOne" type="Emp">
        <id property="eid" column="eid"></id>
        <result property="empName" column="emp_name"></result>
        <result property="age" column="age"></result>
        <result property="sex" column="sex"></result>
        <result property="email" column="email"></result>
        <result property="dept.did" column="did"></result>
        <result property="dept.deptName" column="dept_name"></result>
    </resultMap>

    <!--处理多对一映射关系方式二：association-->
    <resultMap id="empAndDeptResultMapTwo" type="Emp">
        <id property="eid" column="eid"></id>
        <result property="empName" column="emp_name"></result>
        <result property="age" column="age"></result>
        <result property="sex" column="sex"></result>
        <result property="email" column="email"></result>
        <!--
                   association:处理多对一的映射关系
                   property:需要处理多对的映射关系的属性名
                   javaType:该属性的类型
               -->
        <association property="dept" javaType="Dept">
            <id property="did" column="did"></id>
            <result property="deptName" column="dept_name"></result>
        </association>
    </resultMap>
    <!--Emp getEmpAndDept(@Param("eid") Integer eid);-->
    <select id="getEmpAndDept" resultMap="empAndDeptResultMapTwo">
        select *
        from t_emp
                 left join t_dept on t_emp.did = t_dept.did
        where t_emp.eid = #{eid}
    </select>

    <resultMap id="empAndDeptByStepResultMap" type="Emp">
        <id property="eid" column="eid"></id>
        <result property="empName" column="emp_name"></result>
        <result property="age" column="age"></result>
        <result property="sex" column="sex"></result>
        <result property="email" column="email"></result>
        <!--
            select:设置分步查询的sql的唯一标识（namespace.SQLId或mapper接口的全类名.方法名）
            column:设置分布查询的条件
            fetchType:当开启了全局的延迟加载之后，可通过此属性手动控制延迟加载的效果
            fetchType="lazy|eager":lazy表示延迟加载，eager表示立即加载
        -->
        <association property="dept"
                     select="com.jsh.mybatis.dao.EmpDao.getDeptAndEmpByStepTwo"
                     column="did"
                     fetchType="eager">
        </association>
    </resultMap>
    <!--Emp getEmpAndDeptByStepOne(@Param("eid") Integer eid);-->
    <select id="getEmpAndDeptByStepOne" resultMap="empAndDeptByStepResultMap">
        select *
        from t_emp
        where eid = #{eid}
    </select>

    <!--List<Emp> getDeptAndEmpByStepTwo(@Param("did") Integer did);-->
    <select id="getDeptAndEmpByStepTwo" resultType="Emp">
        select *
        from t_emp
        where did = #{did}
    </select>

    <resultMap type="com.jsh.mybatis.entity.Emp" id="EmpMap">
        <result property="eid" column="eid" jdbcType="INTEGER"/>
        <result property="empName" column="emp_name" jdbcType="VARCHAR"/>
        <result property="age" column="age" jdbcType="INTEGER"/>
        <result property="sex" column="sex" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="did" column="did" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="EmpMap">
        select
        eid, emp_name, age, sex, email, did
        from t_emp
        <where>
            <if test="eid != null">
                and eid = #{eid}
            </if>
            <if test="empName != null and empName != ''">
                and emp_name = #{empName}
            </if>
            <if test="age != null">
                and age = #{age}
            </if>
            <if test="sex != null and sex != ''">
                and sex = #{sex}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="did != null">
                and did = #{did}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--通过分页插件pageHelper-->
    <select id="getEmpByPageHelper" resultMap="EmpMap">
        select eid,
               emp_name,
               age,
               sex,
               email,
               did
        from t_emp
    </select>

    <!--通过limit分页查询-->
    <select id="getEmpByLimit" parameterType="map" resultMap="EmpMap">
        select *
        from t_emp limit #{offset},#{pageSize}
    </select>

    <!--通过Rowbounds-->
    <select id="getEmpByRowBounds" resultMap="EmpMap">
        select *
        from t_emp
    </select>

</mapper>

